# -*- coding: utf-8 -*-
"""Trial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yGTEo0mVs-oXLPKQ-2onqPPV1lq-vLXb
"""

import pandas as pd

df = pd.read_csv("/content/sample_data/E-commerce-data.csv")

df.head()
df.count()

df['Remarks'].unique()

effective_df = df[df['Remarks'] != 'Verified Orders']

effective_df.head()

count_row = df.shape[0]  # Gives number of rows
count_col = df.shape[1]  # Gives number of columns
print(count_row, count_col)

count_row = effective_df.shape[0]  # Gives number of rows
count_col = effective_df.shape[1]  # Gives number of columns
print(count_row, count_col)

total_count = effective_df['Count'].sum()

total_count

df2 = pd.DataFrame({'Row Labels' : ['M2S', 'Post-Ship', 'Pre-Manifest'],
                    'Sum of counts': [
                        effective_df[effective_df['Remarks'] == 'M2S']['Count'].sum(),
                        effective_df[effective_df['Remarks'] == 'Post-Ship']['Count'].sum(),
                        effective_df[effective_df['Remarks'] == 'Pre-Manifest']['Count'].sum()
                    ]})

df2

df2['Percentages'] = 100 * df2['Sum of counts'] / total_count

df2

# Plotting the pie chart for above dataframe
effective_df.groupby(['Remarks']).sum().plot(kind='pie', y='Count', autopct='%1.2f%%')

# prompt: Prepare a pie chart for df2

import matplotlib.pyplot as plt

# Prepare data
labels = df2['Row Labels']
sizes = df2['Percentages']

# Create a pie chart
fig, ax = plt.subplots()
wedges, texts, autotexts = ax.pie(sizes, labels=labels, autopct="%1.2f%%", startangle=-40, wedgeprops=dict(width=0.3))

# Add title and show plot
plt.title("Distribution of Order Remarks")
plt.show()

df3 = effective_df.groupby('Remarks').agg({'Count': ['sum']})

df3['Percentage'] = 100 * df3['Count']['sum'] / total_count

df3

df4 = effective_df.groupby(['Period', 'Remarks']).agg({'Count': ['sum']})

df4

import matplotlib.pyplot as plt

df4.reset_index(inplace=True)

plt.figure(figsize=(15, 7))

for name, group in df4.groupby('Remarks'):
    plt.plot(group['Period'], group['Count']['sum'], label=name)

plt.title('Line Graph for Order Remarks by Period')
plt.xlabel('Period')
plt.ylabel('Count')
plt.legend()
plt.show()

df5 = effective_df.groupby(['Channel', 'Remarks']).agg({'Count': ['sum']})

df5

df5.unstack().plot(kind='bar')
plt.title('Bar Graph for Order Remarks by Channel')
plt.xlabel('Channel')
plt.ylabel('Count')
plt.legend()
plt.show()

print(df5.unstack())

df6 = effective_df.groupby(['State']).agg({'Count': ['sum']})
df6

df6.plot(kind='barh', title="Bar Graph for Order Counts by State")
plt.xlabel('Count')
plt.ylabel('State')
plt.show()

df6.plot(kind='barh', figsize=(15, 7))
plt.title('Bar Graph for State by Count')
plt.ylabel('State')
plt.xlabel('Count')
plt.show()

df7 = effective_df.groupby(['Dest Zone', 'Remarks']).agg({'Count': ['sum']})
df7 = df7.unstack()

df7

df7.plot(kind='bar', figsize=(15, 7))
plt.title('Bar Graph for Order Remarks by Destination Zone')
plt.xlabel('Destination Zone')
plt.ylabel('Count')
plt.legend()
plt.show()

df7.plot(kind="bar", stacked=True)
plt.title("Bar Graph for Order Remarks by Destination Zone")
plt.xlabel("Destination Zone")
plt.ylabel("Count")
plt.legend()
plt.show()

df8 = df.groupby(['Payment']).agg({'Count': ['sum']})
df8['% Share'] = 100 * df8[('Count', 'sum')] / df8[('Count', 'sum')].sum()
df8

df8.plot(kind='pie', y='Count', autopct='%1.2f%%')

df8.plot(kind='pie', y='% Share', autopct="%1.2f%%", labels=None, startangle=90, wedgeprops=dict(width=0.5))
plt.title('Pie Chart for Payment Share')
plt.axis('equal')
plt.legend(labels=df8.index, loc='upper right')
plt.show()

df9 = effective_df.groupby(['Payment', 'Remarks']).agg({'Count': ['sum']})
df9

df9.unstack().plot(kind='bar')
plt.title('Bar Graph for Order Remarks by Payment Method')
plt.xlabel('Payment Method')
plt.ylabel('Count')
plt.legend()
plt.show()

